<?php
// $Id: automodal.module,v 1.1 2010/01/13 23:02:14 crell Exp $

/**
 * The main file for automodal.
 * @file
 */

/**
 * Implementation of hook_help().
 */
function automodal_help($path, $args) {
  if ($path == 'admin/help#automodal') {
    return t('Configure links to automatically open in modals.');
  }
}

/**
 * Implementation of hook_menu().
 */
function automodal_menu() {
  $items = array();

  $items['admin/settings/automodal'] = array(
    'title' => t('Automodal'),
    'description' => t('Configure the automodal behavior.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('automodal_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('admin content'),
  );
  
  $items['admin/settings/automodal/test'] = array(
    'title' => t('Test Frame'),
    'description' => t('This is a testing frame.'),
    'page callback' => 'automodal_test',
    'page arguments' => array(''),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Determine whether the current request is for a modalframe page.
 *
 * @return
 *   TRUE if this is a request for a modal page, FALSE otherwise.
 */
function automodal_request_is_child() {
  // Check to see if $_GET contains automodal=true.
  return filter_input(INPUT_GET, 'automodal', FILTER_VALIDATE_BOOLEAN);
}

/**
 * Implements hook_init();
 */
function automodal_init() {
  
  $is_client = automodal_request_is_child();
  
  if ($is_client) {
    modalframe_child_js();
  }
  else {
    $settings = array('automodal'=>array(
      'selector' => variable_get('automodal_default_selector', '.automodal'),
    ));
    $base = drupal_get_path('module', 'automodal');
    modalframe_parent_js();
    drupal_add_js($settings, 'setting');
    drupal_add_js($base . '/automodal.js');
  }
}

/**
 * Settings for automodal.
 */
function automodal_settings_form($form, $form_state = NULL) {
  $form['automodal_default_selector'] = array(
    '#type' => 'textfield',
    '#title' => t('CSS 3 Selector'),
    '#description' => t('Selector used to identify links that should automatically be converted to modals.'),
    '#default_value' => variable_get('automodal_default_selector', '.automodal'),
    '#size' => 60,
    '#maxlength' => 256,
    '#required' => FALSE,
  );
  
  $opts = array(
    'attributes' => array('class' => 'automodal'),
  );
  $form['automodal_test'] = array(
    '#type' => 'markup',
    '#value' => l('This anchor has the class "automodal".', 'admin/settings/automodal/test', $opts) . '<br/>',
  );
  
  return system_settings_form($form);
}

function automodal_test() {
  return t('It works!');
}